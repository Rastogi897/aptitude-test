
# the upstream component nginx needs to connect to

limit_req_zone $binary_remote_addr zone=speedbump:10m rate=10r/s;

proxy_cache_path /nginxcache/ levels=1:2 keys_zone=my_cache:10m max_size=10g 
                 inactive=120m use_temp_path=off;
proxy_cache_valid 200 302 120m;

# server {
# 	server_name	btw.so;
# 	return 301 http://www.btw.so$request_uri;


#     listen 443; # managed by Certbot
#     ssl_certificate /etc/letsencrypt/live/btw.so/fullchain.pem; # managed by Certbot
#     ssl_certificate_key /etc/letsencrypt/live/btw.so/privkey.pem; # managed by Certbot
#     include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

# }

server {
	server_name	freecertificationdumps.com;
	return 301 http://www.freecertificationdumps.com$request_uri;
    listen 80;
}

# configuration of the server

server {

    server_name www.freecertificationdumps.com; 

    charset     utf-8;

    set_real_ip_from 10.0.0.0/8;
    real_ip_header X-Real-IP;
    real_ip_recursive on;

    # max upload size

    client_max_body_size 75M;   # adjust to taste

    # location /robots.txt {
    #     alias /home/sidgunti/adaface-core/adaface-site/public/robots.txt;
    # }


    # TODO: server static files via nginx
    # TODO: cache and serve

    # Finally, send all non-media requests to the Django server.
    location / {
        proxy_cache my_cache;
        proxy_buffering on;
        proxy_ignore_headers Expires;
        proxy_ignore_headers X-Accel-Expires;
        proxy_ignore_headers Cache-Control;
        proxy_ignore_headers Set-Cookie;
        proxy_hide_header X-Accel-Expires;
        proxy_hide_header Expires;
        proxy_hide_header Cache-Control;
        proxy_cache_bypass $cookie_nocache $arg_nocache;
        limit_req zone=speedbump burst=20 nodelay;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://localhost:7300;
    }


    listen 80;

    # listen 443; # managed by Certbot
    # ssl_certificate /etc/letsencrypt/live/btw.so/fullchain.pem; # managed by Certbot
    # ssl_certificate_key /etc/letsencrypt/live/btw.so/privkey.pem; # managed by Certbot
    # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}



# server {
#     if ($host = btw.so) {
#         return 301 https://$host$request_uri;
#     } # managed by Certbot


# 	listen	80;

# 	server_name	btw.so;
#     return 404; # managed by Certbot
# }

# server {
#     if ($host = www.btw.so) {
#         return 301 https://$host$request_uri;
#     } # managed by Certbot

#     listen      80;

#     server_name www.btw.so;
#     return 404; # managed by Certbot
# }

# server {
# }


# server {
    # listen 80;
    # server_name ~^(?!www\.)(?<domain>.+)$;
    # return 301 $scheme://www.$domain$request_uri;
# }

server {
    listen 80 default_server;
    server_name _;

    charset     utf-8;

    set_real_ip_from 10.0.0.0/8;
    real_ip_header X-Real-IP;
    real_ip_recursive on;

    # max upload size

    client_max_body_size 75M;   # adjust to taste

    # location /robots.txt {
    #     alias /home/sidgunti/adaface-site/public/robots.txt;
    # }

    # TODO: server static files via nginx
    # TODO: cache and serve


    # Finally, send all non-media requests to the Django server.
    location / {
        proxy_cache my_cache;
        proxy_buffering on;
        proxy_ignore_headers Expires;
        proxy_ignore_headers X-Accel-Expires;
        proxy_ignore_headers Cache-Control;
        proxy_ignore_headers Set-Cookie;
        proxy_hide_header X-Accel-Expires;
        proxy_hide_header Expires;
        proxy_hide_header Cache-Control;
        proxy_cache_bypass $cookie_nocache $arg_nocache;
        limit_req zone=speedbump burst=20 nodelay;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://localhost:7300;
    }

}

server {
    listen 443 default_server;
    server_name _;

    charset     utf-8;

    set_real_ip_from 10.0.0.0/8;
    real_ip_header X-Real-IP;
    real_ip_recursive on;

    # max upload size

    client_max_body_size 75M;   # adjust to taste

    # location /robots.txt {
    #     alias /home/sidgunti/adaface-site/public/robots.txt;
    # }

    # TODO: server static files via nginx
    # TODO: cache and serve

    # Finally, send all non-media requests to the Django server.
    location / {
        proxy_cache my_cache;
        proxy_buffering on;
        proxy_ignore_headers Expires;
        proxy_ignore_headers X-Accel-Expires;
        proxy_ignore_headers Cache-Control;
        proxy_ignore_headers Set-Cookie;
        proxy_hide_header X-Accel-Expires;
        proxy_hide_header Expires;
        proxy_hide_header Cache-Control;
        proxy_cache_bypass $cookie_nocache $arg_nocache;
        limit_req zone=speedbump burst=20 nodelay;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://localhost:7300;
    }

}
